#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAnTotNghiep.DataAcessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="QLTB")]
	public partial class QLTBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBANGIAO(BANGIAO instance);
    partial void UpdateBANGIAO(BANGIAO instance);
    partial void DeleteBANGIAO(BANGIAO instance);
    partial void InsertTINHTRANG(TINHTRANG instance);
    partial void UpdateTINHTRANG(TINHTRANG instance);
    partial void DeleteTINHTRANG(TINHTRANG instance);
    partial void InsertCHITIETBANGIAO(CHITIETBANGIAO instance);
    partial void UpdateCHITIETBANGIAO(CHITIETBANGIAO instance);
    partial void DeleteCHITIETBANGIAO(CHITIETBANGIAO instance);
    partial void InsertCHITIETPNHAP(CHITIETPNHAP instance);
    partial void UpdateCHITIETPNHAP(CHITIETPNHAP instance);
    partial void DeleteCHITIETPNHAP(CHITIETPNHAP instance);
    partial void InsertCHITIETTHANHLY(CHITIETTHANHLY instance);
    partial void UpdateCHITIETTHANHLY(CHITIETTHANHLY instance);
    partial void DeleteCHITIETTHANHLY(CHITIETTHANHLY instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertDAIDIENKIEMKE(DAIDIENKIEMKE instance);
    partial void UpdateDAIDIENKIEMKE(DAIDIENKIEMKE instance);
    partial void DeleteDAIDIENKIEMKE(DAIDIENKIEMKE instance);
    partial void InsertDONVI(DONVI instance);
    partial void UpdateDONVI(DONVI instance);
    partial void DeleteDONVI(DONVI instance);
    partial void InsertDOTKIEMKE(DOTKIEMKE instance);
    partial void UpdateDOTKIEMKE(DOTKIEMKE instance);
    partial void DeleteDOTKIEMKE(DOTKIEMKE instance);
    partial void InsertDVTINH(DVTINH instance);
    partial void UpdateDVTINH(DVTINH instance);
    partial void DeleteDVTINH(DVTINH instance);
    partial void InsertLOAITHIETBI(LOAITHIETBI instance);
    partial void UpdateLOAITHIETBI(LOAITHIETBI instance);
    partial void DeleteLOAITHIETBI(LOAITHIETBI instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNUOCSX(NUOCSX instance);
    partial void UpdateNUOCSX(NUOCSX instance);
    partial void DeleteNUOCSX(NUOCSX instance);
    partial void InsertPHIEUKIEMKE(PHIEUKIEMKE instance);
    partial void UpdatePHIEUKIEMKE(PHIEUKIEMKE instance);
    partial void DeletePHIEUKIEMKE(PHIEUKIEMKE instance);
    partial void InsertPHIEUPHAP(PHIEUPHAP instance);
    partial void UpdatePHIEUPHAP(PHIEUPHAP instance);
    partial void DeletePHIEUPHAP(PHIEUPHAP instance);
    partial void InsertPHONGBAN(PHONGBAN instance);
    partial void UpdatePHONGBAN(PHONGBAN instance);
    partial void DeletePHONGBAN(PHONGBAN instance);
    partial void InsertQUYEN(QUYEN instance);
    partial void UpdateQUYEN(QUYEN instance);
    partial void DeleteQUYEN(QUYEN instance);
    partial void InsertSOTHEODOI(SOTHEODOI instance);
    partial void UpdateSOTHEODOI(SOTHEODOI instance);
    partial void DeleteSOTHEODOI(SOTHEODOI instance);
    partial void InsertTHANHLY(THANHLY instance);
    partial void UpdateTHANHLY(THANHLY instance);
    partial void DeleteTHANHLY(THANHLY instance);
    partial void InsertTHIETBI(THIETBI instance);
    partial void UpdateTHIETBI(THIETBI instance);
    partial void DeleteTHIETBI(THIETBI instance);
    #endregion
		
		public QLTBDataContext() : 
				base(global::DoAnTotNghiep.Properties.Settings.Default.QLTBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLTBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BANGIAO> BANGIAOs
		{
			get
			{
				return this.GetTable<BANGIAO>();
			}
		}
		
		public System.Data.Linq.Table<TINHTRANG> TINHTRANGs
		{
			get
			{
				return this.GetTable<TINHTRANG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETBANGIAO> CHITIETBANGIAOs
		{
			get
			{
				return this.GetTable<CHITIETBANGIAO>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPNHAP> CHITIETPNHAPs
		{
			get
			{
				return this.GetTable<CHITIETPNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETTHANHLY> CHITIETTHANHLies
		{
			get
			{
				return this.GetTable<CHITIETTHANHLY>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<DAIDIENKIEMKE> DAIDIENKIEMKEs
		{
			get
			{
				return this.GetTable<DAIDIENKIEMKE>();
			}
		}
		
		public System.Data.Linq.Table<DONVI> DONVIs
		{
			get
			{
				return this.GetTable<DONVI>();
			}
		}
		
		public System.Data.Linq.Table<DOTKIEMKE> DOTKIEMKEs
		{
			get
			{
				return this.GetTable<DOTKIEMKE>();
			}
		}
		
		public System.Data.Linq.Table<DVTINH> DVTINHs
		{
			get
			{
				return this.GetTable<DVTINH>();
			}
		}
		
		public System.Data.Linq.Table<LOAITHIETBI> LOAITHIETBIs
		{
			get
			{
				return this.GetTable<LOAITHIETBI>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NUOCSX> NUOCSXes
		{
			get
			{
				return this.GetTable<NUOCSX>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUKIEMKE> PHIEUKIEMKEs
		{
			get
			{
				return this.GetTable<PHIEUKIEMKE>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUPHAP> PHIEUPHAPs
		{
			get
			{
				return this.GetTable<PHIEUPHAP>();
			}
		}
		
		public System.Data.Linq.Table<PHONGBAN> PHONGBANs
		{
			get
			{
				return this.GetTable<PHONGBAN>();
			}
		}
		
		public System.Data.Linq.Table<QUYEN> QUYENs
		{
			get
			{
				return this.GetTable<QUYEN>();
			}
		}
		
		public System.Data.Linq.Table<SOTHEODOI> SOTHEODOIs
		{
			get
			{
				return this.GetTable<SOTHEODOI>();
			}
		}
		
		public System.Data.Linq.Table<THANHLY> THANHLies
		{
			get
			{
				return this.GetTable<THANHLY>();
			}
		}
		
		public System.Data.Linq.Table<THIETBI> THIETBIs
		{
			get
			{
				return this.GetTable<THIETBI>();
			}
		}
		
		[Function(Name="dbo.prGiaiMa")]
		public int prGiaiMa([Parameter(DbType="VarBinary(MAX)")] System.Data.Linq.Binary chuoi_ma, [Parameter(DbType="NVarChar(MAX)")] ref string chuoi)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chuoi_ma, chuoi);
			chuoi = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.prMaHoa")]
		public int prMaHoa([Parameter(DbType="NVarChar(MAX)")] string chuoi, [Parameter(DbType="VarBinary(MAX)")] ref System.Data.Linq.Binary chuoi_ma)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), chuoi, chuoi_ma);
			chuoi_ma = ((System.Data.Linq.Binary)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.BANGIAO")]
	public partial class BANGIAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BanGiaoID;
		
		private int _PhongBanID;
		
		private string _GhiChuBG;
		
		private string _DonViNhan;
		
		private string _PBNhan;
		
		private string _NhanVienGiao;
		
		private string _NhanVienNhan;
		
		private System.Nullable<System.DateTime> _NgayGiao;
		
		private EntitySet<CHITIETBANGIAO> _CHITIETBANGIAOs;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBanGiaoIDChanging(int value);
    partial void OnBanGiaoIDChanged();
    partial void OnPhongBanIDChanging(int value);
    partial void OnPhongBanIDChanged();
    partial void OnGhiChuBGChanging(string value);
    partial void OnGhiChuBGChanged();
    partial void OnDonViNhanChanging(string value);
    partial void OnDonViNhanChanged();
    partial void OnPBNhanChanging(string value);
    partial void OnPBNhanChanged();
    partial void OnNhanVienGiaoChanging(string value);
    partial void OnNhanVienGiaoChanged();
    partial void OnNhanVienNhanChanging(string value);
    partial void OnNhanVienNhanChanged();
    partial void OnNgayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoChanged();
    #endregion
		
		public BANGIAO()
		{
			this._CHITIETBANGIAOs = new EntitySet<CHITIETBANGIAO>(new Action<CHITIETBANGIAO>(this.attach_CHITIETBANGIAOs), new Action<CHITIETBANGIAO>(this.detach_CHITIETBANGIAOs));
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			OnCreated();
		}
		
		[Column(Storage="_BanGiaoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BanGiaoID
		{
			get
			{
				return this._BanGiaoID;
			}
			set
			{
				if ((this._BanGiaoID != value))
				{
					this.OnBanGiaoIDChanging(value);
					this.SendPropertyChanging();
					this._BanGiaoID = value;
					this.SendPropertyChanged("BanGiaoID");
					this.OnBanGiaoIDChanged();
				}
			}
		}
		
		[Column(Storage="_PhongBanID", DbType="Int NOT NULL")]
		public int PhongBanID
		{
			get
			{
				return this._PhongBanID;
			}
			set
			{
				if ((this._PhongBanID != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongBanIDChanging(value);
					this.SendPropertyChanging();
					this._PhongBanID = value;
					this.SendPropertyChanged("PhongBanID");
					this.OnPhongBanIDChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChuBG", DbType="NVarChar(100)")]
		public string GhiChuBG
		{
			get
			{
				return this._GhiChuBG;
			}
			set
			{
				if ((this._GhiChuBG != value))
				{
					this.OnGhiChuBGChanging(value);
					this.SendPropertyChanging();
					this._GhiChuBG = value;
					this.SendPropertyChanged("GhiChuBG");
					this.OnGhiChuBGChanged();
				}
			}
		}
		
		[Column(Storage="_DonViNhan", DbType="NVarChar(50)")]
		public string DonViNhan
		{
			get
			{
				return this._DonViNhan;
			}
			set
			{
				if ((this._DonViNhan != value))
				{
					this.OnDonViNhanChanging(value);
					this.SendPropertyChanging();
					this._DonViNhan = value;
					this.SendPropertyChanged("DonViNhan");
					this.OnDonViNhanChanged();
				}
			}
		}
		
		[Column(Storage="_PBNhan", DbType="NVarChar(50)")]
		public string PBNhan
		{
			get
			{
				return this._PBNhan;
			}
			set
			{
				if ((this._PBNhan != value))
				{
					this.OnPBNhanChanging(value);
					this.SendPropertyChanging();
					this._PBNhan = value;
					this.SendPropertyChanged("PBNhan");
					this.OnPBNhanChanged();
				}
			}
		}
		
		[Column(Storage="_NhanVienGiao", DbType="NVarChar(50)")]
		public string NhanVienGiao
		{
			get
			{
				return this._NhanVienGiao;
			}
			set
			{
				if ((this._NhanVienGiao != value))
				{
					this.OnNhanVienGiaoChanging(value);
					this.SendPropertyChanging();
					this._NhanVienGiao = value;
					this.SendPropertyChanged("NhanVienGiao");
					this.OnNhanVienGiaoChanged();
				}
			}
		}
		
		[Column(Storage="_NhanVienNhan", DbType="NVarChar(50)")]
		public string NhanVienNhan
		{
			get
			{
				return this._NhanVienNhan;
			}
			set
			{
				if ((this._NhanVienNhan != value))
				{
					this.OnNhanVienNhanChanging(value);
					this.SendPropertyChanging();
					this._NhanVienNhan = value;
					this.SendPropertyChanged("NhanVienNhan");
					this.OnNhanVienNhanChanged();
				}
			}
		}
		
		[Column(Storage="_NgayGiao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[Association(Name="BANGIAO_CHITIETBANGIAO", Storage="_CHITIETBANGIAOs", ThisKey="BanGiaoID", OtherKey="BanGiaoID")]
		public EntitySet<CHITIETBANGIAO> CHITIETBANGIAOs
		{
			get
			{
				return this._CHITIETBANGIAOs;
			}
			set
			{
				this._CHITIETBANGIAOs.Assign(value);
			}
		}
		
		[Association(Name="PHONGBAN_BANGIAO", Storage="_PHONGBAN", ThisKey="PhongBanID", OtherKey="PhongBanID", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.BANGIAOs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.BANGIAOs.Add(this);
						this._PhongBanID = value.PhongBanID;
					}
					else
					{
						this._PhongBanID = default(int);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETBANGIAOs(CHITIETBANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.BANGIAO = this;
		}
		
		private void detach_CHITIETBANGIAOs(CHITIETBANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.BANGIAO = null;
		}
	}
	
	[Table(Name="dbo.TINHTRANG")]
	public partial class TINHTRANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TinhTrangID;
		
		private string _TenTinhTrang;
		
		private string _TrangThai;
		
		private EntitySet<SOTHEODOI> _SOTHEODOIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTinhTrangIDChanging(int value);
    partial void OnTinhTrangIDChanged();
    partial void OnTenTinhTrangChanging(string value);
    partial void OnTenTinhTrangChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public TINHTRANG()
		{
			this._SOTHEODOIs = new EntitySet<SOTHEODOI>(new Action<SOTHEODOI>(this.attach_SOTHEODOIs), new Action<SOTHEODOI>(this.detach_SOTHEODOIs));
			OnCreated();
		}
		
		[Column(Storage="_TinhTrangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TinhTrangID
		{
			get
			{
				return this._TinhTrangID;
			}
			set
			{
				if ((this._TinhTrangID != value))
				{
					this.OnTinhTrangIDChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangID = value;
					this.SendPropertyChanged("TinhTrangID");
					this.OnTinhTrangIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenTinhTrang", DbType="NVarChar(50)")]
		public string TenTinhTrang
		{
			get
			{
				return this._TenTinhTrang;
			}
			set
			{
				if ((this._TenTinhTrang != value))
				{
					this.OnTenTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTrang = value;
					this.SendPropertyChanged("TenTinhTrang");
					this.OnTenTinhTrangChanged();
				}
			}
		}
		
		[Column(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[Association(Name="TINHTRANG_SOTHEODOI", Storage="_SOTHEODOIs", ThisKey="TinhTrangID", OtherKey="TinhTrangID")]
		public EntitySet<SOTHEODOI> SOTHEODOIs
		{
			get
			{
				return this._SOTHEODOIs;
			}
			set
			{
				this._SOTHEODOIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG = this;
		}
		
		private void detach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.TINHTRANG = null;
		}
	}
	
	[Table(Name="dbo.CHITIETBANGIAO")]
	public partial class CHITIETBANGIAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThietBiID;
		
		private int _BanGiaoID;
		
		private string _TinhTrangBG;
		
		private string _HienTrangBG;
		
		private EntityRef<BANGIAO> _BANGIAO;
		
		private EntityRef<THIETBI> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThietBiIDChanging(int value);
    partial void OnThietBiIDChanged();
    partial void OnBanGiaoIDChanging(int value);
    partial void OnBanGiaoIDChanged();
    partial void OnTinhTrangBGChanging(string value);
    partial void OnTinhTrangBGChanged();
    partial void OnHienTrangBGChanging(string value);
    partial void OnHienTrangBGChanged();
    #endregion
		
		public CHITIETBANGIAO()
		{
			this._BANGIAO = default(EntityRef<BANGIAO>);
			this._THIETBI = default(EntityRef<THIETBI>);
			OnCreated();
		}
		
		[Column(Storage="_ThietBiID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_BanGiaoID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BanGiaoID
		{
			get
			{
				return this._BanGiaoID;
			}
			set
			{
				if ((this._BanGiaoID != value))
				{
					if (this._BANGIAO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBanGiaoIDChanging(value);
					this.SendPropertyChanging();
					this._BanGiaoID = value;
					this.SendPropertyChanged("BanGiaoID");
					this.OnBanGiaoIDChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrangBG", DbType="NVarChar(50)")]
		public string TinhTrangBG
		{
			get
			{
				return this._TinhTrangBG;
			}
			set
			{
				if ((this._TinhTrangBG != value))
				{
					this.OnTinhTrangBGChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangBG = value;
					this.SendPropertyChanged("TinhTrangBG");
					this.OnTinhTrangBGChanged();
				}
			}
		}
		
		[Column(Storage="_HienTrangBG", DbType="NVarChar(50)")]
		public string HienTrangBG
		{
			get
			{
				return this._HienTrangBG;
			}
			set
			{
				if ((this._HienTrangBG != value))
				{
					this.OnHienTrangBGChanging(value);
					this.SendPropertyChanging();
					this._HienTrangBG = value;
					this.SendPropertyChanged("HienTrangBG");
					this.OnHienTrangBGChanged();
				}
			}
		}
		
		[Association(Name="BANGIAO_CHITIETBANGIAO", Storage="_BANGIAO", ThisKey="BanGiaoID", OtherKey="BanGiaoID", IsForeignKey=true)]
		public BANGIAO BANGIAO
		{
			get
			{
				return this._BANGIAO.Entity;
			}
			set
			{
				BANGIAO previousValue = this._BANGIAO.Entity;
				if (((previousValue != value) 
							|| (this._BANGIAO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BANGIAO.Entity = null;
						previousValue.CHITIETBANGIAOs.Remove(this);
					}
					this._BANGIAO.Entity = value;
					if ((value != null))
					{
						value.CHITIETBANGIAOs.Add(this);
						this._BanGiaoID = value.BanGiaoID;
					}
					else
					{
						this._BanGiaoID = default(int);
					}
					this.SendPropertyChanged("BANGIAO");
				}
			}
		}
		
		[Association(Name="THIETBI_CHITIETBANGIAO", Storage="_THIETBI", ThisKey="ThietBiID", OtherKey="ThietBiID", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CHITIETBANGIAOs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CHITIETBANGIAOs.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(int);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CHITIETPNHAP")]
	public partial class CHITIETPNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThietBiID;
		
		private int _PhieuNhapID;
		
		private System.Nullable<int> _SoLuongNhap;
		
		private System.Nullable<decimal> _dongia;
		
		private EntityRef<PHIEUPHAP> _PHIEUPHAP;
		
		private EntityRef<THIETBI> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThietBiIDChanging(int value);
    partial void OnThietBiIDChanged();
    partial void OnPhieuNhapIDChanging(int value);
    partial void OnPhieuNhapIDChanged();
    partial void OnSoLuongNhapChanging(System.Nullable<int> value);
    partial void OnSoLuongNhapChanged();
    partial void OndongiaChanging(System.Nullable<decimal> value);
    partial void OndongiaChanged();
    #endregion
		
		public CHITIETPNHAP()
		{
			this._PHIEUPHAP = default(EntityRef<PHIEUPHAP>);
			this._THIETBI = default(EntityRef<THIETBI>);
			OnCreated();
		}
		
		[Column(Storage="_ThietBiID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_PhieuNhapID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PhieuNhapID
		{
			get
			{
				return this._PhieuNhapID;
			}
			set
			{
				if ((this._PhieuNhapID != value))
				{
					if (this._PHIEUPHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhieuNhapIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuNhapID = value;
					this.SendPropertyChanged("PhieuNhapID");
					this.OnPhieuNhapIDChanged();
				}
			}
		}
		
		[Column(Storage="_SoLuongNhap", DbType="Int")]
		public System.Nullable<int> SoLuongNhap
		{
			get
			{
				return this._SoLuongNhap;
			}
			set
			{
				if ((this._SoLuongNhap != value))
				{
					this.OnSoLuongNhapChanging(value);
					this.SendPropertyChanging();
					this._SoLuongNhap = value;
					this.SendPropertyChanged("SoLuongNhap");
					this.OnSoLuongNhapChanged();
				}
			}
		}
		
		[Column(Storage="_dongia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[Association(Name="PHIEUPHAP_CHITIETPNHAP", Storage="_PHIEUPHAP", ThisKey="PhieuNhapID", OtherKey="PhieuNhapID", IsForeignKey=true)]
		public PHIEUPHAP PHIEUPHAP
		{
			get
			{
				return this._PHIEUPHAP.Entity;
			}
			set
			{
				PHIEUPHAP previousValue = this._PHIEUPHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUPHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUPHAP.Entity = null;
						previousValue.CHITIETPNHAPs.Remove(this);
					}
					this._PHIEUPHAP.Entity = value;
					if ((value != null))
					{
						value.CHITIETPNHAPs.Add(this);
						this._PhieuNhapID = value.PhieuNhapID;
					}
					else
					{
						this._PhieuNhapID = default(int);
					}
					this.SendPropertyChanged("PHIEUPHAP");
				}
			}
		}
		
		[Association(Name="THIETBI_CHITIETPNHAP", Storage="_THIETBI", ThisKey="ThietBiID", OtherKey="ThietBiID", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CHITIETPNHAPs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CHITIETPNHAPs.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(int);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CHITIETTHANHLY")]
	public partial class CHITIETTHANHLY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThietBiID;
		
		private int _ThanhLyID;
		
		private System.Nullable<decimal> _GiaTriThanhLy;
		
		private EntityRef<THANHLY> _THANHLY;
		
		private EntityRef<THIETBI> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThietBiIDChanging(int value);
    partial void OnThietBiIDChanged();
    partial void OnThanhLyIDChanging(int value);
    partial void OnThanhLyIDChanged();
    partial void OnGiaTriThanhLyChanging(System.Nullable<decimal> value);
    partial void OnGiaTriThanhLyChanged();
    #endregion
		
		public CHITIETTHANHLY()
		{
			this._THANHLY = default(EntityRef<THANHLY>);
			this._THIETBI = default(EntityRef<THIETBI>);
			OnCreated();
		}
		
		[Column(Storage="_ThietBiID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThanhLyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThanhLyID
		{
			get
			{
				return this._ThanhLyID;
			}
			set
			{
				if ((this._ThanhLyID != value))
				{
					if (this._THANHLY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThanhLyIDChanging(value);
					this.SendPropertyChanging();
					this._ThanhLyID = value;
					this.SendPropertyChanged("ThanhLyID");
					this.OnThanhLyIDChanged();
				}
			}
		}
		
		[Column(Storage="_GiaTriThanhLy", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaTriThanhLy
		{
			get
			{
				return this._GiaTriThanhLy;
			}
			set
			{
				if ((this._GiaTriThanhLy != value))
				{
					this.OnGiaTriThanhLyChanging(value);
					this.SendPropertyChanging();
					this._GiaTriThanhLy = value;
					this.SendPropertyChanged("GiaTriThanhLy");
					this.OnGiaTriThanhLyChanged();
				}
			}
		}
		
		[Association(Name="THANHLY_CHITIETTHANHLY", Storage="_THANHLY", ThisKey="ThanhLyID", OtherKey="ThanhLyID", IsForeignKey=true)]
		public THANHLY THANHLY
		{
			get
			{
				return this._THANHLY.Entity;
			}
			set
			{
				THANHLY previousValue = this._THANHLY.Entity;
				if (((previousValue != value) 
							|| (this._THANHLY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THANHLY.Entity = null;
						previousValue.CHITIETTHANHLies.Remove(this);
					}
					this._THANHLY.Entity = value;
					if ((value != null))
					{
						value.CHITIETTHANHLies.Add(this);
						this._ThanhLyID = value.ThanhLyID;
					}
					else
					{
						this._ThanhLyID = default(int);
					}
					this.SendPropertyChanged("THANHLY");
				}
			}
		}
		
		[Association(Name="THIETBI_CHITIETTHANHLY", Storage="_THIETBI", ThisKey="ThietBiID", OtherKey="ThietBiID", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.CHITIETTHANHLies.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.CHITIETTHANHLies.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(int);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChucVuID;
		
		private string _TenChucVU;
		
		private string _DienGiaiCV;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChucVuIDChanging(int value);
    partial void OnChucVuIDChanged();
    partial void OnTenChucVUChanging(string value);
    partial void OnTenChucVUChanged();
    partial void OnDienGiaiCVChanging(string value);
    partial void OnDienGiaiCVChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[Column(Storage="_ChucVuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChucVuID
		{
			get
			{
				return this._ChucVuID;
			}
			set
			{
				if ((this._ChucVuID != value))
				{
					this.OnChucVuIDChanging(value);
					this.SendPropertyChanging();
					this._ChucVuID = value;
					this.SendPropertyChanged("ChucVuID");
					this.OnChucVuIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenChucVU", DbType="NVarChar(50)")]
		public string TenChucVU
		{
			get
			{
				return this._TenChucVU;
			}
			set
			{
				if ((this._TenChucVU != value))
				{
					this.OnTenChucVUChanging(value);
					this.SendPropertyChanging();
					this._TenChucVU = value;
					this.SendPropertyChanged("TenChucVU");
					this.OnTenChucVUChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiaiCV", DbType="NVarChar(100)")]
		public string DienGiaiCV
		{
			get
			{
				return this._DienGiaiCV;
			}
			set
			{
				if ((this._DienGiaiCV != value))
				{
					this.OnDienGiaiCVChanging(value);
					this.SendPropertyChanging();
					this._DienGiaiCV = value;
					this.SendPropertyChanged("DienGiaiCV");
					this.OnDienGiaiCVChanged();
				}
			}
		}
		
		[Association(Name="CHUCVU_NHANVIEN", Storage="_NHANVIENs", ThisKey="ChucVuID", OtherKey="ChucVuID")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
	
	[Table(Name="dbo.DAIDIENKIEMKE")]
	public partial class DAIDIENKIEMKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KiemKeID;
		
		private int _NhanVienID;
		
		private string _QuyenHan;
		
		private EntityRef<DOTKIEMKE> _DOTKIEMKE;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKiemKeIDChanging(int value);
    partial void OnKiemKeIDChanged();
    partial void OnNhanVienIDChanging(int value);
    partial void OnNhanVienIDChanged();
    partial void OnQuyenHanChanging(string value);
    partial void OnQuyenHanChanged();
    #endregion
		
		public DAIDIENKIEMKE()
		{
			this._DOTKIEMKE = default(EntityRef<DOTKIEMKE>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[Column(Storage="_KiemKeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KiemKeID
		{
			get
			{
				return this._KiemKeID;
			}
			set
			{
				if ((this._KiemKeID != value))
				{
					if (this._DOTKIEMKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKiemKeIDChanging(value);
					this.SendPropertyChanging();
					this._KiemKeID = value;
					this.SendPropertyChanged("KiemKeID");
					this.OnKiemKeIDChanged();
				}
			}
		}
		
		[Column(Storage="_NhanVienID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[Column(Storage="_QuyenHan", DbType="NVarChar(50)")]
		public string QuyenHan
		{
			get
			{
				return this._QuyenHan;
			}
			set
			{
				if ((this._QuyenHan != value))
				{
					this.OnQuyenHanChanging(value);
					this.SendPropertyChanging();
					this._QuyenHan = value;
					this.SendPropertyChanged("QuyenHan");
					this.OnQuyenHanChanged();
				}
			}
		}
		
		[Association(Name="DOTKIEMKE_DAIDIENKIEMKE", Storage="_DOTKIEMKE", ThisKey="KiemKeID", OtherKey="KiemKeID", IsForeignKey=true)]
		public DOTKIEMKE DOTKIEMKE
		{
			get
			{
				return this._DOTKIEMKE.Entity;
			}
			set
			{
				DOTKIEMKE previousValue = this._DOTKIEMKE.Entity;
				if (((previousValue != value) 
							|| (this._DOTKIEMKE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOTKIEMKE.Entity = null;
						previousValue.DAIDIENKIEMKEs.Remove(this);
					}
					this._DOTKIEMKE.Entity = value;
					if ((value != null))
					{
						value.DAIDIENKIEMKEs.Add(this);
						this._KiemKeID = value.KiemKeID;
					}
					else
					{
						this._KiemKeID = default(int);
					}
					this.SendPropertyChanged("DOTKIEMKE");
				}
			}
		}
		
		[Association(Name="NHANVIEN_DAIDIENKIEMKE", Storage="_NHANVIEN", ThisKey="NhanVienID", OtherKey="NhanVienID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.DAIDIENKIEMKEs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.DAIDIENKIEMKEs.Add(this);
						this._NhanVienID = value.NhanVienID;
					}
					else
					{
						this._NhanVienID = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DONVI")]
	public partial class DONVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DonViID;
		
		private string _TenDonVi;
		
		private string _DiaChiDV;
		
		private string _DienGiaDV;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<PHONGBAN> _PHONGBANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonViIDChanging(int value);
    partial void OnDonViIDChanged();
    partial void OnTenDonViChanging(string value);
    partial void OnTenDonViChanged();
    partial void OnDiaChiDVChanging(string value);
    partial void OnDiaChiDVChanged();
    partial void OnDienGiaDVChanging(string value);
    partial void OnDienGiaDVChanged();
    #endregion
		
		public DONVI()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._PHONGBANs = new EntitySet<PHONGBAN>(new Action<PHONGBAN>(this.attach_PHONGBANs), new Action<PHONGBAN>(this.detach_PHONGBANs));
			OnCreated();
		}
		
		[Column(Storage="_DonViID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DonViID
		{
			get
			{
				return this._DonViID;
			}
			set
			{
				if ((this._DonViID != value))
				{
					this.OnDonViIDChanging(value);
					this.SendPropertyChanging();
					this._DonViID = value;
					this.SendPropertyChanged("DonViID");
					this.OnDonViIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenDonVi", DbType="NVarChar(100)")]
		public string TenDonVi
		{
			get
			{
				return this._TenDonVi;
			}
			set
			{
				if ((this._TenDonVi != value))
				{
					this.OnTenDonViChanging(value);
					this.SendPropertyChanging();
					this._TenDonVi = value;
					this.SendPropertyChanged("TenDonVi");
					this.OnTenDonViChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChiDV", DbType="NVarChar(100)")]
		public string DiaChiDV
		{
			get
			{
				return this._DiaChiDV;
			}
			set
			{
				if ((this._DiaChiDV != value))
				{
					this.OnDiaChiDVChanging(value);
					this.SendPropertyChanging();
					this._DiaChiDV = value;
					this.SendPropertyChanged("DiaChiDV");
					this.OnDiaChiDVChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiaDV", DbType="NVarChar(100)")]
		public string DienGiaDV
		{
			get
			{
				return this._DienGiaDV;
			}
			set
			{
				if ((this._DienGiaDV != value))
				{
					this.OnDienGiaDVChanging(value);
					this.SendPropertyChanging();
					this._DienGiaDV = value;
					this.SendPropertyChanged("DienGiaDV");
					this.OnDienGiaDVChanged();
				}
			}
		}
		
		[Association(Name="DONVI_NHANVIEN", Storage="_NHANVIENs", ThisKey="DonViID", OtherKey="DonViID")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[Association(Name="DONVI_PHONGBAN", Storage="_PHONGBANs", ThisKey="DonViID", OtherKey="DonViID")]
		public EntitySet<PHONGBAN> PHONGBANs
		{
			get
			{
				return this._PHONGBANs;
			}
			set
			{
				this._PHONGBANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
		
		private void attach_PHONGBANs(PHONGBAN entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_PHONGBANs(PHONGBAN entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
	}
	
	[Table(Name="dbo.DOTKIEMKE")]
	public partial class DOTKIEMKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KiemKeID;
		
		private System.Nullable<System.DateTime> _NgayKiemKe;
		
		private System.Nullable<int> _PhongBanID;
		
		private string _GhiChuKK;
		
		private EntitySet<DAIDIENKIEMKE> _DAIDIENKIEMKEs;
		
		private EntitySet<PHIEUKIEMKE> _PHIEUKIEMKEs;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKiemKeIDChanging(int value);
    partial void OnKiemKeIDChanged();
    partial void OnNgayKiemKeChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKiemKeChanged();
    partial void OnPhongBanIDChanging(System.Nullable<int> value);
    partial void OnPhongBanIDChanged();
    partial void OnGhiChuKKChanging(string value);
    partial void OnGhiChuKKChanged();
    #endregion
		
		public DOTKIEMKE()
		{
			this._DAIDIENKIEMKEs = new EntitySet<DAIDIENKIEMKE>(new Action<DAIDIENKIEMKE>(this.attach_DAIDIENKIEMKEs), new Action<DAIDIENKIEMKE>(this.detach_DAIDIENKIEMKEs));
			this._PHIEUKIEMKEs = new EntitySet<PHIEUKIEMKE>(new Action<PHIEUKIEMKE>(this.attach_PHIEUKIEMKEs), new Action<PHIEUKIEMKE>(this.detach_PHIEUKIEMKEs));
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			OnCreated();
		}
		
		[Column(Storage="_KiemKeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KiemKeID
		{
			get
			{
				return this._KiemKeID;
			}
			set
			{
				if ((this._KiemKeID != value))
				{
					this.OnKiemKeIDChanging(value);
					this.SendPropertyChanging();
					this._KiemKeID = value;
					this.SendPropertyChanged("KiemKeID");
					this.OnKiemKeIDChanged();
				}
			}
		}
		
		[Column(Storage="_NgayKiemKe", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayKiemKe
		{
			get
			{
				return this._NgayKiemKe;
			}
			set
			{
				if ((this._NgayKiemKe != value))
				{
					this.OnNgayKiemKeChanging(value);
					this.SendPropertyChanging();
					this._NgayKiemKe = value;
					this.SendPropertyChanged("NgayKiemKe");
					this.OnNgayKiemKeChanged();
				}
			}
		}
		
		[Column(Storage="_PhongBanID", DbType="Int")]
		public System.Nullable<int> PhongBanID
		{
			get
			{
				return this._PhongBanID;
			}
			set
			{
				if ((this._PhongBanID != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongBanIDChanging(value);
					this.SendPropertyChanging();
					this._PhongBanID = value;
					this.SendPropertyChanged("PhongBanID");
					this.OnPhongBanIDChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChuKK", DbType="NChar(10)")]
		public string GhiChuKK
		{
			get
			{
				return this._GhiChuKK;
			}
			set
			{
				if ((this._GhiChuKK != value))
				{
					this.OnGhiChuKKChanging(value);
					this.SendPropertyChanging();
					this._GhiChuKK = value;
					this.SendPropertyChanged("GhiChuKK");
					this.OnGhiChuKKChanged();
				}
			}
		}
		
		[Association(Name="DOTKIEMKE_DAIDIENKIEMKE", Storage="_DAIDIENKIEMKEs", ThisKey="KiemKeID", OtherKey="KiemKeID")]
		public EntitySet<DAIDIENKIEMKE> DAIDIENKIEMKEs
		{
			get
			{
				return this._DAIDIENKIEMKEs;
			}
			set
			{
				this._DAIDIENKIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="DOTKIEMKE_PHIEUKIEMKE", Storage="_PHIEUKIEMKEs", ThisKey="KiemKeID", OtherKey="KiemKeID")]
		public EntitySet<PHIEUKIEMKE> PHIEUKIEMKEs
		{
			get
			{
				return this._PHIEUKIEMKEs;
			}
			set
			{
				this._PHIEUKIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="PHONGBAN_DOTKIEMKE", Storage="_PHONGBAN", ThisKey="PhongBanID", OtherKey="PhongBanID", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.DOTKIEMKEs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.DOTKIEMKEs.Add(this);
						this._PhongBanID = value.PhongBanID;
					}
					else
					{
						this._PhongBanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAIDIENKIEMKEs(DAIDIENKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.DOTKIEMKE = this;
		}
		
		private void detach_DAIDIENKIEMKEs(DAIDIENKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.DOTKIEMKE = null;
		}
		
		private void attach_PHIEUKIEMKEs(PHIEUKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.DOTKIEMKE = this;
		}
		
		private void detach_PHIEUKIEMKEs(PHIEUKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.DOTKIEMKE = null;
		}
	}
	
	[Table(Name="dbo.DVTINH")]
	public partial class DVTINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DVTID;
		
		private string _TenDVT;
		
		private string _DienGiaiDVT;
		
		private EntitySet<THIETBI> _THIETBIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDVTIDChanging(int value);
    partial void OnDVTIDChanged();
    partial void OnTenDVTChanging(string value);
    partial void OnTenDVTChanged();
    partial void OnDienGiaiDVTChanging(string value);
    partial void OnDienGiaiDVTChanged();
    #endregion
		
		public DVTINH()
		{
			this._THIETBIs = new EntitySet<THIETBI>(new Action<THIETBI>(this.attach_THIETBIs), new Action<THIETBI>(this.detach_THIETBIs));
			OnCreated();
		}
		
		[Column(Storage="_DVTID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DVTID
		{
			get
			{
				return this._DVTID;
			}
			set
			{
				if ((this._DVTID != value))
				{
					this.OnDVTIDChanging(value);
					this.SendPropertyChanging();
					this._DVTID = value;
					this.SendPropertyChanged("DVTID");
					this.OnDVTIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenDVT", DbType="NChar(20)")]
		public string TenDVT
		{
			get
			{
				return this._TenDVT;
			}
			set
			{
				if ((this._TenDVT != value))
				{
					this.OnTenDVTChanging(value);
					this.SendPropertyChanging();
					this._TenDVT = value;
					this.SendPropertyChanged("TenDVT");
					this.OnTenDVTChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiaiDVT", DbType="NVarChar(MAX)")]
		public string DienGiaiDVT
		{
			get
			{
				return this._DienGiaiDVT;
			}
			set
			{
				if ((this._DienGiaiDVT != value))
				{
					this.OnDienGiaiDVTChanging(value);
					this.SendPropertyChanging();
					this._DienGiaiDVT = value;
					this.SendPropertyChanged("DienGiaiDVT");
					this.OnDienGiaiDVTChanged();
				}
			}
		}
		
		[Association(Name="DVTINH_THIETBI", Storage="_THIETBIs", ThisKey="DVTID", OtherKey="DVTID")]
		public EntitySet<THIETBI> THIETBIs
		{
			get
			{
				return this._THIETBIs;
			}
			set
			{
				this._THIETBIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.DVTINH = this;
		}
		
		private void detach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.DVTINH = null;
		}
	}
	
	[Table(Name="dbo.LOAITHIETBI")]
	public partial class LOAITHIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoaiTBID;
		
		private string _TenLoaiTB;
		
		private string _DienGiaiLTB;
		
		private EntitySet<THIETBI> _THIETBIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoaiTBIDChanging(int value);
    partial void OnLoaiTBIDChanged();
    partial void OnTenLoaiTBChanging(string value);
    partial void OnTenLoaiTBChanged();
    partial void OnDienGiaiLTBChanging(string value);
    partial void OnDienGiaiLTBChanged();
    #endregion
		
		public LOAITHIETBI()
		{
			this._THIETBIs = new EntitySet<THIETBI>(new Action<THIETBI>(this.attach_THIETBIs), new Action<THIETBI>(this.detach_THIETBIs));
			OnCreated();
		}
		
		[Column(Storage="_LoaiTBID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoaiTBID
		{
			get
			{
				return this._LoaiTBID;
			}
			set
			{
				if ((this._LoaiTBID != value))
				{
					this.OnLoaiTBIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiTBID = value;
					this.SendPropertyChanged("LoaiTBID");
					this.OnLoaiTBIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenLoaiTB", DbType="NVarChar(30)")]
		public string TenLoaiTB
		{
			get
			{
				return this._TenLoaiTB;
			}
			set
			{
				if ((this._TenLoaiTB != value))
				{
					this.OnTenLoaiTBChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiTB = value;
					this.SendPropertyChanged("TenLoaiTB");
					this.OnTenLoaiTBChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiaiLTB", DbType="NVarChar(150)")]
		public string DienGiaiLTB
		{
			get
			{
				return this._DienGiaiLTB;
			}
			set
			{
				if ((this._DienGiaiLTB != value))
				{
					this.OnDienGiaiLTBChanging(value);
					this.SendPropertyChanging();
					this._DienGiaiLTB = value;
					this.SendPropertyChanged("DienGiaiLTB");
					this.OnDienGiaiLTBChanged();
				}
			}
		}
		
		[Association(Name="LOAITHIETBI_THIETBI", Storage="_THIETBIs", ThisKey="LoaiTBID", OtherKey="LoaiTBID")]
		public EntitySet<THIETBI> THIETBIs
		{
			get
			{
				return this._THIETBIs;
			}
			set
			{
				this._THIETBIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.LOAITHIETBI = this;
		}
		
		private void detach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.LOAITHIETBI = null;
		}
	}
	
	[Table(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NguoiDungID;
		
		private System.Nullable<int> _NhanVienID;
		
		private string _MaDangNhap;
		
		private string _MatKhau;
		
		private int _QuyenID;
		
		private EntitySet<PHIEUPHAP> _PHIEUPHAPs;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<QUYEN> _QUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    partial void OnNhanVienIDChanging(System.Nullable<int> value);
    partial void OnNhanVienIDChanged();
    partial void OnMaDangNhapChanging(string value);
    partial void OnMaDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuyenIDChanging(int value);
    partial void OnQuyenIDChanged();
    #endregion
		
		public NguoiDung()
		{
			this._PHIEUPHAPs = new EntitySet<PHIEUPHAP>(new Action<PHIEUPHAP>(this.attach_PHIEUPHAPs), new Action<PHIEUPHAP>(this.detach_PHIEUPHAPs));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._QUYEN = default(EntityRef<QUYEN>);
			OnCreated();
		}
		
		[Column(Storage="_NguoiDungID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[Column(Storage="_NhanVienID", DbType="Int")]
		public System.Nullable<int> NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaDangNhap", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string MaDangNhap
		{
			get
			{
				return this._MaDangNhap;
			}
			set
			{
				if ((this._MaDangNhap != value))
				{
					this.OnMaDangNhapChanging(value);
					this.SendPropertyChanging();
					this._MaDangNhap = value;
					this.SendPropertyChanged("MaDangNhap");
					this.OnMaDangNhapChanged();
				}
			}
		}
		
		[Column(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[Column(Storage="_QuyenID", DbType="Int NOT NULL")]
		public int QuyenID
		{
			get
			{
				return this._QuyenID;
			}
			set
			{
				if ((this._QuyenID != value))
				{
					if (this._QUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuyenIDChanging(value);
					this.SendPropertyChanging();
					this._QuyenID = value;
					this.SendPropertyChanged("QuyenID");
					this.OnQuyenIDChanged();
				}
			}
		}
		
		[Association(Name="NguoiDung_PHIEUPHAP", Storage="_PHIEUPHAPs", ThisKey="NguoiDungID", OtherKey="NguoiDungID")]
		public EntitySet<PHIEUPHAP> PHIEUPHAPs
		{
			get
			{
				return this._PHIEUPHAPs;
			}
			set
			{
				this._PHIEUPHAPs.Assign(value);
			}
		}
		
		[Association(Name="NHANVIEN_NguoiDung", Storage="_NHANVIEN", ThisKey="NhanVienID", OtherKey="NhanVienID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._NhanVienID = value.NhanVienID;
					}
					else
					{
						this._NhanVienID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[Association(Name="QUYEN_NguoiDung", Storage="_QUYEN", ThisKey="QuyenID", OtherKey="QuyenID", IsForeignKey=true)]
		public QUYEN QUYEN
		{
			get
			{
				return this._QUYEN.Entity;
			}
			set
			{
				QUYEN previousValue = this._QUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUYEN.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._QUYEN.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._QuyenID = value.QuyenID;
					}
					else
					{
						this._QuyenID = default(int);
					}
					this.SendPropertyChanged("QUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUPHAPs(PHIEUPHAP entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_PHIEUPHAPs(PHIEUPHAP entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[Table(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NCCID;
		
		private string _TenNhaCC;
		
		private string _HoTenNguoiLH;
		
		private string _ChucVuNLH;
		
		private string _DiaChiNhaCC;
		
		private string _DienThoaiNhaCC;
		
		private System.Nullable<int> _Sofax;
		
		private string _Email;
		
		private string _Wesite;
		
		private string _GhiChuNhaCC;
		
		private EntitySet<PHIEUPHAP> _PHIEUPHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNCCIDChanging(int value);
    partial void OnNCCIDChanged();
    partial void OnTenNhaCCChanging(string value);
    partial void OnTenNhaCCChanged();
    partial void OnHoTenNguoiLHChanging(string value);
    partial void OnHoTenNguoiLHChanged();
    partial void OnChucVuNLHChanging(string value);
    partial void OnChucVuNLHChanged();
    partial void OnDiaChiNhaCCChanging(string value);
    partial void OnDiaChiNhaCCChanged();
    partial void OnDienThoaiNhaCCChanging(string value);
    partial void OnDienThoaiNhaCCChanged();
    partial void OnSofaxChanging(System.Nullable<int> value);
    partial void OnSofaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWesiteChanging(string value);
    partial void OnWesiteChanged();
    partial void OnGhiChuNhaCCChanging(string value);
    partial void OnGhiChuNhaCCChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._PHIEUPHAPs = new EntitySet<PHIEUPHAP>(new Action<PHIEUPHAP>(this.attach_PHIEUPHAPs), new Action<PHIEUPHAP>(this.detach_PHIEUPHAPs));
			OnCreated();
		}
		
		[Column(Storage="_NCCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NCCID
		{
			get
			{
				return this._NCCID;
			}
			set
			{
				if ((this._NCCID != value))
				{
					this.OnNCCIDChanging(value);
					this.SendPropertyChanging();
					this._NCCID = value;
					this.SendPropertyChanged("NCCID");
					this.OnNCCIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenNhaCC", DbType="NVarChar(100)")]
		public string TenNhaCC
		{
			get
			{
				return this._TenNhaCC;
			}
			set
			{
				if ((this._TenNhaCC != value))
				{
					this.OnTenNhaCCChanging(value);
					this.SendPropertyChanging();
					this._TenNhaCC = value;
					this.SendPropertyChanged("TenNhaCC");
					this.OnTenNhaCCChanged();
				}
			}
		}
		
		[Column(Storage="_HoTenNguoiLH", DbType="NVarChar(50)")]
		public string HoTenNguoiLH
		{
			get
			{
				return this._HoTenNguoiLH;
			}
			set
			{
				if ((this._HoTenNguoiLH != value))
				{
					this.OnHoTenNguoiLHChanging(value);
					this.SendPropertyChanging();
					this._HoTenNguoiLH = value;
					this.SendPropertyChanged("HoTenNguoiLH");
					this.OnHoTenNguoiLHChanged();
				}
			}
		}
		
		[Column(Storage="_ChucVuNLH", DbType="NVarChar(50)")]
		public string ChucVuNLH
		{
			get
			{
				return this._ChucVuNLH;
			}
			set
			{
				if ((this._ChucVuNLH != value))
				{
					this.OnChucVuNLHChanging(value);
					this.SendPropertyChanging();
					this._ChucVuNLH = value;
					this.SendPropertyChanged("ChucVuNLH");
					this.OnChucVuNLHChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChiNhaCC", DbType="NVarChar(100)")]
		public string DiaChiNhaCC
		{
			get
			{
				return this._DiaChiNhaCC;
			}
			set
			{
				if ((this._DiaChiNhaCC != value))
				{
					this.OnDiaChiNhaCCChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNhaCC = value;
					this.SendPropertyChanged("DiaChiNhaCC");
					this.OnDiaChiNhaCCChanged();
				}
			}
		}
		
		[Column(Storage="_DienThoaiNhaCC", DbType="NVarChar(50)")]
		public string DienThoaiNhaCC
		{
			get
			{
				return this._DienThoaiNhaCC;
			}
			set
			{
				if ((this._DienThoaiNhaCC != value))
				{
					this.OnDienThoaiNhaCCChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiNhaCC = value;
					this.SendPropertyChanged("DienThoaiNhaCC");
					this.OnDienThoaiNhaCCChanged();
				}
			}
		}
		
		[Column(Storage="_Sofax", DbType="Int")]
		public System.Nullable<int> Sofax
		{
			get
			{
				return this._Sofax;
			}
			set
			{
				if ((this._Sofax != value))
				{
					this.OnSofaxChanging(value);
					this.SendPropertyChanging();
					this._Sofax = value;
					this.SendPropertyChanged("Sofax");
					this.OnSofaxChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Wesite", DbType="NVarChar(50)")]
		public string Wesite
		{
			get
			{
				return this._Wesite;
			}
			set
			{
				if ((this._Wesite != value))
				{
					this.OnWesiteChanging(value);
					this.SendPropertyChanging();
					this._Wesite = value;
					this.SendPropertyChanged("Wesite");
					this.OnWesiteChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChuNhaCC", DbType="NVarChar(150)")]
		public string GhiChuNhaCC
		{
			get
			{
				return this._GhiChuNhaCC;
			}
			set
			{
				if ((this._GhiChuNhaCC != value))
				{
					this.OnGhiChuNhaCCChanging(value);
					this.SendPropertyChanging();
					this._GhiChuNhaCC = value;
					this.SendPropertyChanged("GhiChuNhaCC");
					this.OnGhiChuNhaCCChanged();
				}
			}
		}
		
		[Association(Name="NHACUNGCAP_PHIEUPHAP", Storage="_PHIEUPHAPs", ThisKey="NCCID", OtherKey="NCCID")]
		public EntitySet<PHIEUPHAP> PHIEUPHAPs
		{
			get
			{
				return this._PHIEUPHAPs;
			}
			set
			{
				this._PHIEUPHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUPHAPs(PHIEUPHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUPHAPs(PHIEUPHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[Table(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NhanVienID;
		
		private int _DonViID;
		
		private int _ChucVuID;
		
		private string _MaNV;
		
		private string _HoNV;
		
		private string _TenNV;
		
		private System.Nullable<bool> _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChiNV;
		
		private string _Email;
		
		private string _HinhAnhNV;
		
		private string _DienThoaiNV;
		
		private string _GhiChuNV;
		
		private EntitySet<DAIDIENKIEMKE> _DAIDIENKIEMKEs;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
		private EntityRef<DONVI> _DONVI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhanVienIDChanging(int value);
    partial void OnNhanVienIDChanged();
    partial void OnDonViIDChanging(int value);
    partial void OnDonViIDChanged();
    partial void OnChucVuIDChanging(int value);
    partial void OnChucVuIDChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnHoNVChanging(string value);
    partial void OnHoNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiNVChanging(string value);
    partial void OnDiaChiNVChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHinhAnhNVChanging(string value);
    partial void OnHinhAnhNVChanged();
    partial void OnDienThoaiNVChanging(string value);
    partial void OnDienThoaiNVChanged();
    partial void OnGhiChuNVChanging(string value);
    partial void OnGhiChuNVChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._DAIDIENKIEMKEs = new EntitySet<DAIDIENKIEMKE>(new Action<DAIDIENKIEMKE>(this.attach_DAIDIENKIEMKEs), new Action<DAIDIENKIEMKE>(this.detach_DAIDIENKIEMKEs));
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			this._CHUCVU = default(EntityRef<CHUCVU>);
			this._DONVI = default(EntityRef<DONVI>);
			OnCreated();
		}
		
		[Column(Storage="_NhanVienID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[Column(Storage="_DonViID", DbType="Int NOT NULL")]
		public int DonViID
		{
			get
			{
				return this._DonViID;
			}
			set
			{
				if ((this._DonViID != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViIDChanging(value);
					this.SendPropertyChanging();
					this._DonViID = value;
					this.SendPropertyChanged("DonViID");
					this.OnDonViIDChanged();
				}
			}
		}
		
		[Column(Storage="_ChucVuID", DbType="Int NOT NULL")]
		public int ChucVuID
		{
			get
			{
				return this._ChucVuID;
			}
			set
			{
				if ((this._ChucVuID != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChucVuIDChanging(value);
					this.SendPropertyChanging();
					this._ChucVuID = value;
					this.SendPropertyChanged("ChucVuID");
					this.OnChucVuIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaNV", DbType="NVarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[Column(Storage="_HoNV", DbType="NVarChar(50)")]
		public string HoNV
		{
			get
			{
				return this._HoNV;
			}
			set
			{
				if ((this._HoNV != value))
				{
					this.OnHoNVChanging(value);
					this.SendPropertyChanging();
					this._HoNV = value;
					this.SendPropertyChanged("HoNV");
					this.OnHoNVChanged();
				}
			}
		}
		
		[Column(Storage="_TenNV", DbType="NVarChar(50)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[Column(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[Column(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[Column(Storage="_DiaChiNV", DbType="NVarChar(100)")]
		public string DiaChiNV
		{
			get
			{
				return this._DiaChiNV;
			}
			set
			{
				if ((this._DiaChiNV != value))
				{
					this.OnDiaChiNVChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNV = value;
					this.SendPropertyChanged("DiaChiNV");
					this.OnDiaChiNVChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_HinhAnhNV", DbType="NVarChar(50)")]
		public string HinhAnhNV
		{
			get
			{
				return this._HinhAnhNV;
			}
			set
			{
				if ((this._HinhAnhNV != value))
				{
					this.OnHinhAnhNVChanging(value);
					this.SendPropertyChanging();
					this._HinhAnhNV = value;
					this.SendPropertyChanged("HinhAnhNV");
					this.OnHinhAnhNVChanged();
				}
			}
		}
		
		[Column(Storage="_DienThoaiNV", DbType="NVarChar(20)")]
		public string DienThoaiNV
		{
			get
			{
				return this._DienThoaiNV;
			}
			set
			{
				if ((this._DienThoaiNV != value))
				{
					this.OnDienThoaiNVChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiNV = value;
					this.SendPropertyChanged("DienThoaiNV");
					this.OnDienThoaiNVChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChuNV", DbType="NVarChar(100)")]
		public string GhiChuNV
		{
			get
			{
				return this._GhiChuNV;
			}
			set
			{
				if ((this._GhiChuNV != value))
				{
					this.OnGhiChuNVChanging(value);
					this.SendPropertyChanging();
					this._GhiChuNV = value;
					this.SendPropertyChanged("GhiChuNV");
					this.OnGhiChuNVChanged();
				}
			}
		}
		
		[Association(Name="NHANVIEN_DAIDIENKIEMKE", Storage="_DAIDIENKIEMKEs", ThisKey="NhanVienID", OtherKey="NhanVienID")]
		public EntitySet<DAIDIENKIEMKE> DAIDIENKIEMKEs
		{
			get
			{
				return this._DAIDIENKIEMKEs;
			}
			set
			{
				this._DAIDIENKIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="NHANVIEN_NguoiDung", Storage="_NguoiDungs", ThisKey="NhanVienID", OtherKey="NhanVienID")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		[Association(Name="CHUCVU_NHANVIEN", Storage="_CHUCVU", ThisKey="ChucVuID", OtherKey="ChucVuID", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._ChucVuID = value.ChucVuID;
					}
					else
					{
						this._ChucVuID = default(int);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		[Association(Name="DONVI_NHANVIEN", Storage="_DONVI", ThisKey="DonViID", OtherKey="DonViID", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._DonViID = value.DonViID;
					}
					else
					{
						this._DonViID = default(int);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAIDIENKIEMKEs(DAIDIENKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_DAIDIENKIEMKEs(DAIDIENKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[Table(Name="dbo.NUOCSX")]
	public partial class NUOCSX : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NUOCSXID;
		
		private string _TenNuoc;
		
		private EntitySet<THIETBI> _THIETBIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNUOCSXIDChanging(int value);
    partial void OnNUOCSXIDChanged();
    partial void OnTenNuocChanging(string value);
    partial void OnTenNuocChanged();
    #endregion
		
		public NUOCSX()
		{
			this._THIETBIs = new EntitySet<THIETBI>(new Action<THIETBI>(this.attach_THIETBIs), new Action<THIETBI>(this.detach_THIETBIs));
			OnCreated();
		}
		
		[Column(Storage="_NUOCSXID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NUOCSXID
		{
			get
			{
				return this._NUOCSXID;
			}
			set
			{
				if ((this._NUOCSXID != value))
				{
					this.OnNUOCSXIDChanging(value);
					this.SendPropertyChanging();
					this._NUOCSXID = value;
					this.SendPropertyChanged("NUOCSXID");
					this.OnNUOCSXIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenNuoc", DbType="NVarChar(50)")]
		public string TenNuoc
		{
			get
			{
				return this._TenNuoc;
			}
			set
			{
				if ((this._TenNuoc != value))
				{
					this.OnTenNuocChanging(value);
					this.SendPropertyChanging();
					this._TenNuoc = value;
					this.SendPropertyChanged("TenNuoc");
					this.OnTenNuocChanged();
				}
			}
		}
		
		[Association(Name="NUOCSX_THIETBI", Storage="_THIETBIs", ThisKey="NUOCSXID", OtherKey="NUOCSXID")]
		public EntitySet<THIETBI> THIETBIs
		{
			get
			{
				return this._THIETBIs;
			}
			set
			{
				this._THIETBIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.NUOCSX = this;
		}
		
		private void detach_THIETBIs(THIETBI entity)
		{
			this.SendPropertyChanging();
			entity.NUOCSX = null;
		}
	}
	
	[Table(Name="dbo.PHIEUKIEMKE")]
	public partial class PHIEUKIEMKE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KiemKeID;
		
		private int _ThietBiID;
		
		private string _HienTrangKK;
		
		private string _TinhTrangKK;
		
		private EntityRef<DOTKIEMKE> _DOTKIEMKE;
		
		private EntityRef<THIETBI> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKiemKeIDChanging(int value);
    partial void OnKiemKeIDChanged();
    partial void OnThietBiIDChanging(int value);
    partial void OnThietBiIDChanged();
    partial void OnHienTrangKKChanging(string value);
    partial void OnHienTrangKKChanged();
    partial void OnTinhTrangKKChanging(string value);
    partial void OnTinhTrangKKChanged();
    #endregion
		
		public PHIEUKIEMKE()
		{
			this._DOTKIEMKE = default(EntityRef<DOTKIEMKE>);
			this._THIETBI = default(EntityRef<THIETBI>);
			OnCreated();
		}
		
		[Column(Storage="_KiemKeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KiemKeID
		{
			get
			{
				return this._KiemKeID;
			}
			set
			{
				if ((this._KiemKeID != value))
				{
					if (this._DOTKIEMKE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKiemKeIDChanging(value);
					this.SendPropertyChanging();
					this._KiemKeID = value;
					this.SendPropertyChanged("KiemKeID");
					this.OnKiemKeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThietBiID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_HienTrangKK", DbType="Char(250)")]
		public string HienTrangKK
		{
			get
			{
				return this._HienTrangKK;
			}
			set
			{
				if ((this._HienTrangKK != value))
				{
					this.OnHienTrangKKChanging(value);
					this.SendPropertyChanging();
					this._HienTrangKK = value;
					this.SendPropertyChanged("HienTrangKK");
					this.OnHienTrangKKChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrangKK", DbType="NVarChar(50)")]
		public string TinhTrangKK
		{
			get
			{
				return this._TinhTrangKK;
			}
			set
			{
				if ((this._TinhTrangKK != value))
				{
					this.OnTinhTrangKKChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangKK = value;
					this.SendPropertyChanged("TinhTrangKK");
					this.OnTinhTrangKKChanged();
				}
			}
		}
		
		[Association(Name="DOTKIEMKE_PHIEUKIEMKE", Storage="_DOTKIEMKE", ThisKey="KiemKeID", OtherKey="KiemKeID", IsForeignKey=true)]
		public DOTKIEMKE DOTKIEMKE
		{
			get
			{
				return this._DOTKIEMKE.Entity;
			}
			set
			{
				DOTKIEMKE previousValue = this._DOTKIEMKE.Entity;
				if (((previousValue != value) 
							|| (this._DOTKIEMKE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOTKIEMKE.Entity = null;
						previousValue.PHIEUKIEMKEs.Remove(this);
					}
					this._DOTKIEMKE.Entity = value;
					if ((value != null))
					{
						value.PHIEUKIEMKEs.Add(this);
						this._KiemKeID = value.KiemKeID;
					}
					else
					{
						this._KiemKeID = default(int);
					}
					this.SendPropertyChanged("DOTKIEMKE");
				}
			}
		}
		
		[Association(Name="THIETBI_PHIEUKIEMKE", Storage="_THIETBI", ThisKey="ThietBiID", OtherKey="ThietBiID", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.PHIEUKIEMKEs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.PHIEUKIEMKEs.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(int);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PHIEUPHAP")]
	public partial class PHIEUPHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhieuNhapID;
		
		private int _NCCID;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private string _GhiChuPNhap;
		
		private int _PhongBanID;
		
		private int _NguoiDungID;
		
		private EntitySet<CHITIETPNHAP> _CHITIETPNHAPs;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhieuNhapIDChanging(int value);
    partial void OnPhieuNhapIDChanged();
    partial void OnNCCIDChanging(int value);
    partial void OnNCCIDChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnGhiChuPNhapChanging(string value);
    partial void OnGhiChuPNhapChanged();
    partial void OnPhongBanIDChanging(int value);
    partial void OnPhongBanIDChanged();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    #endregion
		
		public PHIEUPHAP()
		{
			this._CHITIETPNHAPs = new EntitySet<CHITIETPNHAP>(new Action<CHITIETPNHAP>(this.attach_CHITIETPNHAPs), new Action<CHITIETPNHAP>(this.detach_CHITIETPNHAPs));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			OnCreated();
		}
		
		[Column(Storage="_PhieuNhapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhieuNhapID
		{
			get
			{
				return this._PhieuNhapID;
			}
			set
			{
				if ((this._PhieuNhapID != value))
				{
					this.OnPhieuNhapIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuNhapID = value;
					this.SendPropertyChanged("PhieuNhapID");
					this.OnPhieuNhapIDChanged();
				}
			}
		}
		
		[Column(Storage="_NCCID", DbType="Int NOT NULL")]
		public int NCCID
		{
			get
			{
				return this._NCCID;
			}
			set
			{
				if ((this._NCCID != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNCCIDChanging(value);
					this.SendPropertyChanging();
					this._NCCID = value;
					this.SendPropertyChanged("NCCID");
					this.OnNCCIDChanged();
				}
			}
		}
		
		[Column(Storage="_NgayNhap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChuPNhap", DbType="NVarChar(150)")]
		public string GhiChuPNhap
		{
			get
			{
				return this._GhiChuPNhap;
			}
			set
			{
				if ((this._GhiChuPNhap != value))
				{
					this.OnGhiChuPNhapChanging(value);
					this.SendPropertyChanging();
					this._GhiChuPNhap = value;
					this.SendPropertyChanged("GhiChuPNhap");
					this.OnGhiChuPNhapChanged();
				}
			}
		}
		
		[Column(Storage="_PhongBanID", DbType="Int NOT NULL")]
		public int PhongBanID
		{
			get
			{
				return this._PhongBanID;
			}
			set
			{
				if ((this._PhongBanID != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongBanIDChanging(value);
					this.SendPropertyChanging();
					this._PhongBanID = value;
					this.SendPropertyChanged("PhongBanID");
					this.OnPhongBanIDChanged();
				}
			}
		}
		
		[Column(Storage="_NguoiDungID", DbType="Int NOT NULL")]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[Association(Name="PHIEUPHAP_CHITIETPNHAP", Storage="_CHITIETPNHAPs", ThisKey="PhieuNhapID", OtherKey="PhieuNhapID")]
		public EntitySet<CHITIETPNHAP> CHITIETPNHAPs
		{
			get
			{
				return this._CHITIETPNHAPs;
			}
			set
			{
				this._CHITIETPNHAPs.Assign(value);
			}
		}
		
		[Association(Name="NguoiDung_PHIEUPHAP", Storage="_NguoiDung", ThisKey="NguoiDungID", OtherKey="NguoiDungID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.PHIEUPHAPs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.PHIEUPHAPs.Add(this);
						this._NguoiDungID = value.NguoiDungID;
					}
					else
					{
						this._NguoiDungID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[Association(Name="NHACUNGCAP_PHIEUPHAP", Storage="_NHACUNGCAP", ThisKey="NCCID", OtherKey="NCCID", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUPHAPs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUPHAPs.Add(this);
						this._NCCID = value.NCCID;
					}
					else
					{
						this._NCCID = default(int);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[Association(Name="PHONGBAN_PHIEUPHAP", Storage="_PHONGBAN", ThisKey="PhongBanID", OtherKey="PhongBanID", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.PHIEUPHAPs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.PHIEUPHAPs.Add(this);
						this._PhongBanID = value.PhongBanID;
					}
					else
					{
						this._PhongBanID = default(int);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPNHAPs(CHITIETPNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUPHAP = this;
		}
		
		private void detach_CHITIETPNHAPs(CHITIETPNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUPHAP = null;
		}
	}
	
	[Table(Name="dbo.PHONGBAN")]
	public partial class PHONGBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhongBanID;
		
		private int _DonViID;
		
		private string _TenPhongBan;
		
		private string _DienGiaiPB;
		
		private EntitySet<BANGIAO> _BANGIAOs;
		
		private EntitySet<DOTKIEMKE> _DOTKIEMKEs;
		
		private EntitySet<PHIEUPHAP> _PHIEUPHAPs;
		
		private EntitySet<SOTHEODOI> _SOTHEODOIs;
		
		private EntitySet<THANHLY> _THANHLies;
		
		private EntityRef<DONVI> _DONVI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhongBanIDChanging(int value);
    partial void OnPhongBanIDChanged();
    partial void OnDonViIDChanging(int value);
    partial void OnDonViIDChanged();
    partial void OnTenPhongBanChanging(string value);
    partial void OnTenPhongBanChanged();
    partial void OnDienGiaiPBChanging(string value);
    partial void OnDienGiaiPBChanged();
    #endregion
		
		public PHONGBAN()
		{
			this._BANGIAOs = new EntitySet<BANGIAO>(new Action<BANGIAO>(this.attach_BANGIAOs), new Action<BANGIAO>(this.detach_BANGIAOs));
			this._DOTKIEMKEs = new EntitySet<DOTKIEMKE>(new Action<DOTKIEMKE>(this.attach_DOTKIEMKEs), new Action<DOTKIEMKE>(this.detach_DOTKIEMKEs));
			this._PHIEUPHAPs = new EntitySet<PHIEUPHAP>(new Action<PHIEUPHAP>(this.attach_PHIEUPHAPs), new Action<PHIEUPHAP>(this.detach_PHIEUPHAPs));
			this._SOTHEODOIs = new EntitySet<SOTHEODOI>(new Action<SOTHEODOI>(this.attach_SOTHEODOIs), new Action<SOTHEODOI>(this.detach_SOTHEODOIs));
			this._THANHLies = new EntitySet<THANHLY>(new Action<THANHLY>(this.attach_THANHLies), new Action<THANHLY>(this.detach_THANHLies));
			this._DONVI = default(EntityRef<DONVI>);
			OnCreated();
		}
		
		[Column(Storage="_PhongBanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhongBanID
		{
			get
			{
				return this._PhongBanID;
			}
			set
			{
				if ((this._PhongBanID != value))
				{
					this.OnPhongBanIDChanging(value);
					this.SendPropertyChanging();
					this._PhongBanID = value;
					this.SendPropertyChanged("PhongBanID");
					this.OnPhongBanIDChanged();
				}
			}
		}
		
		[Column(Storage="_DonViID", DbType="Int NOT NULL")]
		public int DonViID
		{
			get
			{
				return this._DonViID;
			}
			set
			{
				if ((this._DonViID != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonViIDChanging(value);
					this.SendPropertyChanging();
					this._DonViID = value;
					this.SendPropertyChanged("DonViID");
					this.OnDonViIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenPhongBan", DbType="NVarChar(150)")]
		public string TenPhongBan
		{
			get
			{
				return this._TenPhongBan;
			}
			set
			{
				if ((this._TenPhongBan != value))
				{
					this.OnTenPhongBanChanging(value);
					this.SendPropertyChanging();
					this._TenPhongBan = value;
					this.SendPropertyChanged("TenPhongBan");
					this.OnTenPhongBanChanged();
				}
			}
		}
		
		[Column(Storage="_DienGiaiPB", DbType="NVarChar(100)")]
		public string DienGiaiPB
		{
			get
			{
				return this._DienGiaiPB;
			}
			set
			{
				if ((this._DienGiaiPB != value))
				{
					this.OnDienGiaiPBChanging(value);
					this.SendPropertyChanging();
					this._DienGiaiPB = value;
					this.SendPropertyChanged("DienGiaiPB");
					this.OnDienGiaiPBChanged();
				}
			}
		}
		
		[Association(Name="PHONGBAN_BANGIAO", Storage="_BANGIAOs", ThisKey="PhongBanID", OtherKey="PhongBanID")]
		public EntitySet<BANGIAO> BANGIAOs
		{
			get
			{
				return this._BANGIAOs;
			}
			set
			{
				this._BANGIAOs.Assign(value);
			}
		}
		
		[Association(Name="PHONGBAN_DOTKIEMKE", Storage="_DOTKIEMKEs", ThisKey="PhongBanID", OtherKey="PhongBanID")]
		public EntitySet<DOTKIEMKE> DOTKIEMKEs
		{
			get
			{
				return this._DOTKIEMKEs;
			}
			set
			{
				this._DOTKIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="PHONGBAN_PHIEUPHAP", Storage="_PHIEUPHAPs", ThisKey="PhongBanID", OtherKey="PhongBanID")]
		public EntitySet<PHIEUPHAP> PHIEUPHAPs
		{
			get
			{
				return this._PHIEUPHAPs;
			}
			set
			{
				this._PHIEUPHAPs.Assign(value);
			}
		}
		
		[Association(Name="PHONGBAN_SOTHEODOI", Storage="_SOTHEODOIs", ThisKey="PhongBanID", OtherKey="PhongBanID")]
		public EntitySet<SOTHEODOI> SOTHEODOIs
		{
			get
			{
				return this._SOTHEODOIs;
			}
			set
			{
				this._SOTHEODOIs.Assign(value);
			}
		}
		
		[Association(Name="PHONGBAN_THANHLY", Storage="_THANHLies", ThisKey="PhongBanID", OtherKey="PhongBanID")]
		public EntitySet<THANHLY> THANHLies
		{
			get
			{
				return this._THANHLies;
			}
			set
			{
				this._THANHLies.Assign(value);
			}
		}
		
		[Association(Name="DONVI_PHONGBAN", Storage="_DONVI", ThisKey="DonViID", OtherKey="DonViID", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.PHONGBANs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.PHONGBANs.Add(this);
						this._DonViID = value.DonViID;
					}
					else
					{
						this._DonViID = default(int);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BANGIAOs(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_BANGIAOs(BANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
		
		private void attach_DOTKIEMKEs(DOTKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_DOTKIEMKEs(DOTKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
		
		private void attach_PHIEUPHAPs(PHIEUPHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_PHIEUPHAPs(PHIEUPHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
		
		private void attach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
		
		private void attach_THANHLies(THANHLY entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_THANHLies(THANHLY entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
	}
	
	[Table(Name="dbo.QUYEN")]
	public partial class QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuyenID;
		
		private string _TenQuenHan;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuyenIDChanging(int value);
    partial void OnQuyenIDChanged();
    partial void OnTenQuenHanChanging(string value);
    partial void OnTenQuenHanChanged();
    #endregion
		
		public QUYEN()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[Column(Storage="_QuyenID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuyenID
		{
			get
			{
				return this._QuyenID;
			}
			set
			{
				if ((this._QuyenID != value))
				{
					this.OnQuyenIDChanging(value);
					this.SendPropertyChanging();
					this._QuyenID = value;
					this.SendPropertyChanged("QuyenID");
					this.OnQuyenIDChanged();
				}
			}
		}
		
		[Column(Storage="_TenQuenHan", DbType="NVarChar(50)")]
		public string TenQuenHan
		{
			get
			{
				return this._TenQuenHan;
			}
			set
			{
				if ((this._TenQuenHan != value))
				{
					this.OnTenQuenHanChanging(value);
					this.SendPropertyChanging();
					this._TenQuenHan = value;
					this.SendPropertyChanged("TenQuenHan");
					this.OnTenQuenHanChanged();
				}
			}
		}
		
		[Association(Name="QUYEN_NguoiDung", Storage="_NguoiDungs", ThisKey="QuyenID", OtherKey="QuyenID")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = null;
		}
	}
	
	[Table(Name="dbo.SOTHEODOI")]
	public partial class SOTHEODOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoTheoDoiID;
		
		private int _TinhTrangID;
		
		private int _ThietBiID;
		
		private int _PhongBanID;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
		private EntityRef<TINHTRANG> _TINHTRANG;
		
		private EntityRef<THIETBI> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoTheoDoiIDChanging(int value);
    partial void OnSoTheoDoiIDChanged();
    partial void OnTinhTrangIDChanging(int value);
    partial void OnTinhTrangIDChanged();
    partial void OnThietBiIDChanging(int value);
    partial void OnThietBiIDChanged();
    partial void OnPhongBanIDChanging(int value);
    partial void OnPhongBanIDChanged();
    #endregion
		
		public SOTHEODOI()
		{
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			this._TINHTRANG = default(EntityRef<TINHTRANG>);
			this._THIETBI = default(EntityRef<THIETBI>);
			OnCreated();
		}
		
		[Column(Storage="_SoTheoDoiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SoTheoDoiID
		{
			get
			{
				return this._SoTheoDoiID;
			}
			set
			{
				if ((this._SoTheoDoiID != value))
				{
					this.OnSoTheoDoiIDChanging(value);
					this.SendPropertyChanging();
					this._SoTheoDoiID = value;
					this.SendPropertyChanged("SoTheoDoiID");
					this.OnSoTheoDoiIDChanged();
				}
			}
		}
		
		[Column(Storage="_TinhTrangID", DbType="Int NOT NULL")]
		public int TinhTrangID
		{
			get
			{
				return this._TinhTrangID;
			}
			set
			{
				if ((this._TinhTrangID != value))
				{
					if (this._TINHTRANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTinhTrangIDChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangID = value;
					this.SendPropertyChanged("TinhTrangID");
					this.OnTinhTrangIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThietBiID", DbType="Int NOT NULL")]
		public int ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_PhongBanID", DbType="Int NOT NULL")]
		public int PhongBanID
		{
			get
			{
				return this._PhongBanID;
			}
			set
			{
				if ((this._PhongBanID != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongBanIDChanging(value);
					this.SendPropertyChanging();
					this._PhongBanID = value;
					this.SendPropertyChanged("PhongBanID");
					this.OnPhongBanIDChanged();
				}
			}
		}
		
		[Association(Name="PHONGBAN_SOTHEODOI", Storage="_PHONGBAN", ThisKey="PhongBanID", OtherKey="PhongBanID", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.SOTHEODOIs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.SOTHEODOIs.Add(this);
						this._PhongBanID = value.PhongBanID;
					}
					else
					{
						this._PhongBanID = default(int);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		[Association(Name="TINHTRANG_SOTHEODOI", Storage="_TINHTRANG", ThisKey="TinhTrangID", OtherKey="TinhTrangID", IsForeignKey=true)]
		public TINHTRANG TINHTRANG
		{
			get
			{
				return this._TINHTRANG.Entity;
			}
			set
			{
				TINHTRANG previousValue = this._TINHTRANG.Entity;
				if (((previousValue != value) 
							|| (this._TINHTRANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINHTRANG.Entity = null;
						previousValue.SOTHEODOIs.Remove(this);
					}
					this._TINHTRANG.Entity = value;
					if ((value != null))
					{
						value.SOTHEODOIs.Add(this);
						this._TinhTrangID = value.TinhTrangID;
					}
					else
					{
						this._TinhTrangID = default(int);
					}
					this.SendPropertyChanged("TINHTRANG");
				}
			}
		}
		
		[Association(Name="THIETBI_SOTHEODOI", Storage="_THIETBI", ThisKey="ThietBiID", OtherKey="ThietBiID", IsForeignKey=true)]
		public THIETBI THIETBI
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				THIETBI previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.SOTHEODOIs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.SOTHEODOIs.Add(this);
						this._ThietBiID = value.ThietBiID;
					}
					else
					{
						this._ThietBiID = default(int);
					}
					this.SendPropertyChanged("THIETBI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.THANHLY")]
	public partial class THANHLY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThanhLyID;
		
		private System.Nullable<System.DateTime> _NgayThanhLy;
		
		private string _DaiDienBenMua;
		
		private string _GhiChuTL;
		
		private System.Nullable<int> _PhongBanID;
		
		private EntitySet<CHITIETTHANHLY> _CHITIETTHANHLies;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThanhLyIDChanging(int value);
    partial void OnThanhLyIDChanged();
    partial void OnNgayThanhLyChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhLyChanged();
    partial void OnDaiDienBenMuaChanging(string value);
    partial void OnDaiDienBenMuaChanged();
    partial void OnGhiChuTLChanging(string value);
    partial void OnGhiChuTLChanged();
    partial void OnPhongBanIDChanging(System.Nullable<int> value);
    partial void OnPhongBanIDChanged();
    #endregion
		
		public THANHLY()
		{
			this._CHITIETTHANHLies = new EntitySet<CHITIETTHANHLY>(new Action<CHITIETTHANHLY>(this.attach_CHITIETTHANHLies), new Action<CHITIETTHANHLY>(this.detach_CHITIETTHANHLies));
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			OnCreated();
		}
		
		[Column(Storage="_ThanhLyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThanhLyID
		{
			get
			{
				return this._ThanhLyID;
			}
			set
			{
				if ((this._ThanhLyID != value))
				{
					this.OnThanhLyIDChanging(value);
					this.SendPropertyChanging();
					this._ThanhLyID = value;
					this.SendPropertyChanged("ThanhLyID");
					this.OnThanhLyIDChanged();
				}
			}
		}
		
		[Column(Storage="_NgayThanhLy", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThanhLy
		{
			get
			{
				return this._NgayThanhLy;
			}
			set
			{
				if ((this._NgayThanhLy != value))
				{
					this.OnNgayThanhLyChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhLy = value;
					this.SendPropertyChanged("NgayThanhLy");
					this.OnNgayThanhLyChanged();
				}
			}
		}
		
		[Column(Storage="_DaiDienBenMua", DbType="NVarChar(150)")]
		public string DaiDienBenMua
		{
			get
			{
				return this._DaiDienBenMua;
			}
			set
			{
				if ((this._DaiDienBenMua != value))
				{
					this.OnDaiDienBenMuaChanging(value);
					this.SendPropertyChanging();
					this._DaiDienBenMua = value;
					this.SendPropertyChanged("DaiDienBenMua");
					this.OnDaiDienBenMuaChanged();
				}
			}
		}
		
		[Column(Storage="_GhiChuTL", DbType="NVarChar(150)")]
		public string GhiChuTL
		{
			get
			{
				return this._GhiChuTL;
			}
			set
			{
				if ((this._GhiChuTL != value))
				{
					this.OnGhiChuTLChanging(value);
					this.SendPropertyChanging();
					this._GhiChuTL = value;
					this.SendPropertyChanged("GhiChuTL");
					this.OnGhiChuTLChanged();
				}
			}
		}
		
		[Column(Storage="_PhongBanID", DbType="Int")]
		public System.Nullable<int> PhongBanID
		{
			get
			{
				return this._PhongBanID;
			}
			set
			{
				if ((this._PhongBanID != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongBanIDChanging(value);
					this.SendPropertyChanging();
					this._PhongBanID = value;
					this.SendPropertyChanged("PhongBanID");
					this.OnPhongBanIDChanged();
				}
			}
		}
		
		[Association(Name="THANHLY_CHITIETTHANHLY", Storage="_CHITIETTHANHLies", ThisKey="ThanhLyID", OtherKey="ThanhLyID")]
		public EntitySet<CHITIETTHANHLY> CHITIETTHANHLies
		{
			get
			{
				return this._CHITIETTHANHLies;
			}
			set
			{
				this._CHITIETTHANHLies.Assign(value);
			}
		}
		
		[Association(Name="PHONGBAN_THANHLY", Storage="_PHONGBAN", ThisKey="PhongBanID", OtherKey="PhongBanID", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.THANHLies.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.THANHLies.Add(this);
						this._PhongBanID = value.PhongBanID;
					}
					else
					{
						this._PhongBanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETTHANHLies(CHITIETTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.THANHLY = this;
		}
		
		private void detach_CHITIETTHANHLies(CHITIETTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.THANHLY = null;
		}
	}
	
	[Table(Name="dbo.THIETBI")]
	public partial class THIETBI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThietBiID;
		
		private int _LoaiTBID;
		
		private string _MaThietBi;
		
		private string _TenTB;
		
		private System.Nullable<int> _SoLuongTB;
		
		private System.Nullable<int> _ThoiGianBH;
		
		private System.Nullable<int> _DVTID;
		
		private string _ThongSoKT;
		
		private System.Nullable<int> _NUOCSXID;
		
		private System.Nullable<int> _NamSanXuat;
		
		private string _HinhAnh;
		
		private string _MoTa;
		
		private EntitySet<CHITIETBANGIAO> _CHITIETBANGIAOs;
		
		private EntitySet<CHITIETPNHAP> _CHITIETPNHAPs;
		
		private EntitySet<CHITIETTHANHLY> _CHITIETTHANHLies;
		
		private EntitySet<PHIEUKIEMKE> _PHIEUKIEMKEs;
		
		private EntitySet<SOTHEODOI> _SOTHEODOIs;
		
		private EntityRef<DVTINH> _DVTINH;
		
		private EntityRef<LOAITHIETBI> _LOAITHIETBI;
		
		private EntityRef<NUOCSX> _NUOCSX;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThietBiIDChanging(int value);
    partial void OnThietBiIDChanged();
    partial void OnLoaiTBIDChanging(int value);
    partial void OnLoaiTBIDChanged();
    partial void OnMaThietBiChanging(string value);
    partial void OnMaThietBiChanged();
    partial void OnTenTBChanging(string value);
    partial void OnTenTBChanged();
    partial void OnSoLuongTBChanging(System.Nullable<int> value);
    partial void OnSoLuongTBChanged();
    partial void OnThoiGianBHChanging(System.Nullable<int> value);
    partial void OnThoiGianBHChanged();
    partial void OnDVTIDChanging(System.Nullable<int> value);
    partial void OnDVTIDChanged();
    partial void OnThongSoKTChanging(string value);
    partial void OnThongSoKTChanged();
    partial void OnNUOCSXIDChanging(System.Nullable<int> value);
    partial void OnNUOCSXIDChanged();
    partial void OnNamSanXuatChanging(System.Nullable<int> value);
    partial void OnNamSanXuatChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public THIETBI()
		{
			this._CHITIETBANGIAOs = new EntitySet<CHITIETBANGIAO>(new Action<CHITIETBANGIAO>(this.attach_CHITIETBANGIAOs), new Action<CHITIETBANGIAO>(this.detach_CHITIETBANGIAOs));
			this._CHITIETPNHAPs = new EntitySet<CHITIETPNHAP>(new Action<CHITIETPNHAP>(this.attach_CHITIETPNHAPs), new Action<CHITIETPNHAP>(this.detach_CHITIETPNHAPs));
			this._CHITIETTHANHLies = new EntitySet<CHITIETTHANHLY>(new Action<CHITIETTHANHLY>(this.attach_CHITIETTHANHLies), new Action<CHITIETTHANHLY>(this.detach_CHITIETTHANHLies));
			this._PHIEUKIEMKEs = new EntitySet<PHIEUKIEMKE>(new Action<PHIEUKIEMKE>(this.attach_PHIEUKIEMKEs), new Action<PHIEUKIEMKE>(this.detach_PHIEUKIEMKEs));
			this._SOTHEODOIs = new EntitySet<SOTHEODOI>(new Action<SOTHEODOI>(this.attach_SOTHEODOIs), new Action<SOTHEODOI>(this.detach_SOTHEODOIs));
			this._DVTINH = default(EntityRef<DVTINH>);
			this._LOAITHIETBI = default(EntityRef<LOAITHIETBI>);
			this._NUOCSX = default(EntityRef<NUOCSX>);
			OnCreated();
		}
		
		[Column(Storage="_ThietBiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThietBiID
		{
			get
			{
				return this._ThietBiID;
			}
			set
			{
				if ((this._ThietBiID != value))
				{
					this.OnThietBiIDChanging(value);
					this.SendPropertyChanging();
					this._ThietBiID = value;
					this.SendPropertyChanged("ThietBiID");
					this.OnThietBiIDChanged();
				}
			}
		}
		
		[Column(Storage="_LoaiTBID", DbType="Int NOT NULL")]
		public int LoaiTBID
		{
			get
			{
				return this._LoaiTBID;
			}
			set
			{
				if ((this._LoaiTBID != value))
				{
					if (this._LOAITHIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiTBIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiTBID = value;
					this.SendPropertyChanged("LoaiTBID");
					this.OnLoaiTBIDChanged();
				}
			}
		}
		
		[Column(Storage="_MaThietBi", DbType="NVarChar(10)")]
		public string MaThietBi
		{
			get
			{
				return this._MaThietBi;
			}
			set
			{
				if ((this._MaThietBi != value))
				{
					this.OnMaThietBiChanging(value);
					this.SendPropertyChanging();
					this._MaThietBi = value;
					this.SendPropertyChanged("MaThietBi");
					this.OnMaThietBiChanged();
				}
			}
		}
		
		[Column(Storage="_TenTB", DbType="NVarChar(100)")]
		public string TenTB
		{
			get
			{
				return this._TenTB;
			}
			set
			{
				if ((this._TenTB != value))
				{
					this.OnTenTBChanging(value);
					this.SendPropertyChanging();
					this._TenTB = value;
					this.SendPropertyChanged("TenTB");
					this.OnTenTBChanged();
				}
			}
		}
		
		[Column(Storage="_SoLuongTB", DbType="Int")]
		public System.Nullable<int> SoLuongTB
		{
			get
			{
				return this._SoLuongTB;
			}
			set
			{
				if ((this._SoLuongTB != value))
				{
					this.OnSoLuongTBChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTB = value;
					this.SendPropertyChanged("SoLuongTB");
					this.OnSoLuongTBChanged();
				}
			}
		}
		
		[Column(Storage="_ThoiGianBH", DbType="Int")]
		public System.Nullable<int> ThoiGianBH
		{
			get
			{
				return this._ThoiGianBH;
			}
			set
			{
				if ((this._ThoiGianBH != value))
				{
					this.OnThoiGianBHChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBH = value;
					this.SendPropertyChanged("ThoiGianBH");
					this.OnThoiGianBHChanged();
				}
			}
		}
		
		[Column(Storage="_DVTID", DbType="Int")]
		public System.Nullable<int> DVTID
		{
			get
			{
				return this._DVTID;
			}
			set
			{
				if ((this._DVTID != value))
				{
					if (this._DVTINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDVTIDChanging(value);
					this.SendPropertyChanging();
					this._DVTID = value;
					this.SendPropertyChanged("DVTID");
					this.OnDVTIDChanged();
				}
			}
		}
		
		[Column(Storage="_ThongSoKT", DbType="NVarChar(MAX)")]
		public string ThongSoKT
		{
			get
			{
				return this._ThongSoKT;
			}
			set
			{
				if ((this._ThongSoKT != value))
				{
					this.OnThongSoKTChanging(value);
					this.SendPropertyChanging();
					this._ThongSoKT = value;
					this.SendPropertyChanged("ThongSoKT");
					this.OnThongSoKTChanged();
				}
			}
		}
		
		[Column(Storage="_NUOCSXID", DbType="Int")]
		public System.Nullable<int> NUOCSXID
		{
			get
			{
				return this._NUOCSXID;
			}
			set
			{
				if ((this._NUOCSXID != value))
				{
					if (this._NUOCSX.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNUOCSXIDChanging(value);
					this.SendPropertyChanging();
					this._NUOCSXID = value;
					this.SendPropertyChanged("NUOCSXID");
					this.OnNUOCSXIDChanged();
				}
			}
		}
		
		[Column(Storage="_NamSanXuat", DbType="Int")]
		public System.Nullable<int> NamSanXuat
		{
			get
			{
				return this._NamSanXuat;
			}
			set
			{
				if ((this._NamSanXuat != value))
				{
					this.OnNamSanXuatChanging(value);
					this.SendPropertyChanging();
					this._NamSanXuat = value;
					this.SendPropertyChanged("NamSanXuat");
					this.OnNamSanXuatChanged();
				}
			}
		}
		
		[Column(Storage="_HinhAnh", DbType="NVarChar(50)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[Column(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[Association(Name="THIETBI_CHITIETBANGIAO", Storage="_CHITIETBANGIAOs", ThisKey="ThietBiID", OtherKey="ThietBiID")]
		public EntitySet<CHITIETBANGIAO> CHITIETBANGIAOs
		{
			get
			{
				return this._CHITIETBANGIAOs;
			}
			set
			{
				this._CHITIETBANGIAOs.Assign(value);
			}
		}
		
		[Association(Name="THIETBI_CHITIETPNHAP", Storage="_CHITIETPNHAPs", ThisKey="ThietBiID", OtherKey="ThietBiID")]
		public EntitySet<CHITIETPNHAP> CHITIETPNHAPs
		{
			get
			{
				return this._CHITIETPNHAPs;
			}
			set
			{
				this._CHITIETPNHAPs.Assign(value);
			}
		}
		
		[Association(Name="THIETBI_CHITIETTHANHLY", Storage="_CHITIETTHANHLies", ThisKey="ThietBiID", OtherKey="ThietBiID")]
		public EntitySet<CHITIETTHANHLY> CHITIETTHANHLies
		{
			get
			{
				return this._CHITIETTHANHLies;
			}
			set
			{
				this._CHITIETTHANHLies.Assign(value);
			}
		}
		
		[Association(Name="THIETBI_PHIEUKIEMKE", Storage="_PHIEUKIEMKEs", ThisKey="ThietBiID", OtherKey="ThietBiID")]
		public EntitySet<PHIEUKIEMKE> PHIEUKIEMKEs
		{
			get
			{
				return this._PHIEUKIEMKEs;
			}
			set
			{
				this._PHIEUKIEMKEs.Assign(value);
			}
		}
		
		[Association(Name="THIETBI_SOTHEODOI", Storage="_SOTHEODOIs", ThisKey="ThietBiID", OtherKey="ThietBiID")]
		public EntitySet<SOTHEODOI> SOTHEODOIs
		{
			get
			{
				return this._SOTHEODOIs;
			}
			set
			{
				this._SOTHEODOIs.Assign(value);
			}
		}
		
		[Association(Name="DVTINH_THIETBI", Storage="_DVTINH", ThisKey="DVTID", OtherKey="DVTID", IsForeignKey=true)]
		public DVTINH DVTINH
		{
			get
			{
				return this._DVTINH.Entity;
			}
			set
			{
				DVTINH previousValue = this._DVTINH.Entity;
				if (((previousValue != value) 
							|| (this._DVTINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DVTINH.Entity = null;
						previousValue.THIETBIs.Remove(this);
					}
					this._DVTINH.Entity = value;
					if ((value != null))
					{
						value.THIETBIs.Add(this);
						this._DVTID = value.DVTID;
					}
					else
					{
						this._DVTID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DVTINH");
				}
			}
		}
		
		[Association(Name="LOAITHIETBI_THIETBI", Storage="_LOAITHIETBI", ThisKey="LoaiTBID", OtherKey="LoaiTBID", IsForeignKey=true)]
		public LOAITHIETBI LOAITHIETBI
		{
			get
			{
				return this._LOAITHIETBI.Entity;
			}
			set
			{
				LOAITHIETBI previousValue = this._LOAITHIETBI.Entity;
				if (((previousValue != value) 
							|| (this._LOAITHIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITHIETBI.Entity = null;
						previousValue.THIETBIs.Remove(this);
					}
					this._LOAITHIETBI.Entity = value;
					if ((value != null))
					{
						value.THIETBIs.Add(this);
						this._LoaiTBID = value.LoaiTBID;
					}
					else
					{
						this._LoaiTBID = default(int);
					}
					this.SendPropertyChanged("LOAITHIETBI");
				}
			}
		}
		
		[Association(Name="NUOCSX_THIETBI", Storage="_NUOCSX", ThisKey="NUOCSXID", OtherKey="NUOCSXID", IsForeignKey=true)]
		public NUOCSX NUOCSX
		{
			get
			{
				return this._NUOCSX.Entity;
			}
			set
			{
				NUOCSX previousValue = this._NUOCSX.Entity;
				if (((previousValue != value) 
							|| (this._NUOCSX.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NUOCSX.Entity = null;
						previousValue.THIETBIs.Remove(this);
					}
					this._NUOCSX.Entity = value;
					if ((value != null))
					{
						value.THIETBIs.Add(this);
						this._NUOCSXID = value.NUOCSXID;
					}
					else
					{
						this._NUOCSXID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NUOCSX");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETBANGIAOs(CHITIETBANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CHITIETBANGIAOs(CHITIETBANGIAO entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CHITIETPNHAPs(CHITIETPNHAP entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CHITIETPNHAPs(CHITIETPNHAP entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_CHITIETTHANHLies(CHITIETTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_CHITIETTHANHLies(CHITIETTHANHLY entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_PHIEUKIEMKEs(PHIEUKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_PHIEUKIEMKEs(PHIEUKIEMKE entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
		
		private void attach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = this;
		}
		
		private void detach_SOTHEODOIs(SOTHEODOI entity)
		{
			this.SendPropertyChanging();
			entity.THIETBI = null;
		}
	}
}
#pragma warning restore 1591
